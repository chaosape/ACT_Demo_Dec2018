package SW
public
	
with Data_Model;
with Base_Types;
with TB_SYS;

-- This is the structure to hold the lat/long/alt values of a coordinate
data Coordinate
    
end Coordinate;

data implementation Coordinate.Impl
	subcomponents
		lat: data Base_Types::Integer_32;
		longitude: data Base_Types::Integer_32; -- jab 'long' is a c keyword
		alt: data Base_Types::Integer_32;
end Coordinate.Impl;
	
-- The Map is a structure that contains a list of coordinates that encircle a
-- region.  
-- In this implementation, we fix the size of the map to 4 waypoints
data Map
	  
end Map;
	
data implementation Map.Impl
	subcomponents
		wp1: data Coordinate.Impl;
		wp2: data Coordinate.Impl;
		wp3: data Coordinate.Impl;
		wp4: data Coordinate.Impl;
end Map.Impl;
	
-- The Flight Pattern is an enumeration that defines how the UAV will fly through the
-- sensing region to conduct surveillance.
data FlightPattern
	--properties		
	--	Data_Model::Data_Representation => Enum;
	--	Data_Model::Enumerators => ("ZigZag", "StraightLine", "Perimeter");
end FlightPattern;
	
data implementation FlightPattern.Impl
	subcomponents
		enumAsInt: data Base_Types::Integer_32;
end FlightPattern.Impl;
	
-- The Command structure contains data that the Ground Station passes to the UAV.
-- It contains a Map, Flight Pattern and Authentication bit.
data Command	  
end Command;
		
data implementation Command.Impl
	subcomponents
		Map: data Map.Impl;
		Pattern: data FlightPattern.Impl;
		HMAC: data Base_Types::Boolean;
end Command.Impl;
	
-- The Mission is a list of waypoints that is generated by the Flight Planner based on a
-- Map and Flight Pattern.
-- For this implementation, we fix the size of the Mission to 10 waypoints.
data Mission
end Mission;

data implementation Mission.Impl
	properties
    	Data_Model::Data_Representation => Array;
    	Data_Model::Base_Type => (classifier (Base_Types::Unsigned_8));
    	Data_Model::Dimension => (6429);
end Mission.Impl;

data UART_Buffer
end UART_Buffer;

data implementation UART_Buffer.Impl
	properties
		Data_Model::Data_Representation => Array;
		Data_Model::Base_Type => (classifier (Base_Types::Unsigned_8));
		Data_Model::Dimension => (255);
end UART_Buffer.Impl;

data UART_Packet
end UART_Packet;

data implementation UART_Packet.Impl
	subcomponents
		buf: data UART_Buffer.Impl;
		buf_len: data Base_Types::Integer_32;
end UART_Packet.Impl;

	
thread RadioDriver
	features
		recv_map_out: out event data port Command.Impl;
		
	properties
		Source_Text => ("behavior/radiodriver.c");
   		Dispatch_Protocol => Sporadic;
      	Priority => 200;
      	Stack_Size => 1024 Bytes;
      	Compute_Execution_Time => 10 us .. 100 us;
      	Period => 1 ms;
      	TB_SYS::Sends_Events_To => "{{}}";
      	Initialize_Entrypoint_Source_Text => "init";
end RadioDriver;
	
thread implementation RadioDriver.Impl
end RadioDriver.Impl;

thread FlightPlanner
	features
		mission_new: out event data port Base_Types::Boolean;
		-- mission: requires data access Mission.Impl {
		--		Access_Right => READ_WRITE;
		-- };
		mission_rcv: in event data port Base_Types::Boolean {
			TB_SYS::Compute_Entrypoint_Source_Text => ("mission_rcv");
		};
		
		recv_map: in event data port Command.Impl  {
			TB_SYS::Compute_Entrypoint_Source_Text => ("recv_map");
		};
    
	properties
		Source_Text => ("behavior/flightplanner.c");
    	Dispatch_Protocol => Sporadic;
      	Priority => 200;
      	Stack_Size => 1024 Bytes;
      	Compute_Execution_Time => 10 us .. 100 us;
      	Period => 1 ms;
      	TB_SYS::Sends_Events_To => "{{}}";		
end FlightPlanner;
  
thread implementation FlightPlanner.Impl
end FlightPlanner.Impl;
  	
thread WaypointManager
	features
		mission_new: in event data port Base_Types::Boolean {
			TB_SYS::Compute_Entrypoint_Source_Text => ("mission_new");
		};
		-- mission: requires data access Mission.Impl {
		--		Access_Right => READ_WRITE;
		-- };
		mission_rcv: out event data port Base_Types::Boolean;
		send_uartpkt: out event data port UART_Packet.Impl;
		tracking_id: in event data port Base_Types::Integer_64 {
			TB_SYS::Compute_Entrypoint_Source_Text => ("tracking_id");
		};
		
	properties
		Source_Text => 
			(
			"behavior/waypointmanager.c",
			"behavior/WaypointManagerUtils.c",
            "behavior/Polygon.c",
            "behavior/NavigationAction.h",
            "behavior/WaypointTransfer.h",
            "behavior/AirVehicleConfiguration.h",
            "behavior/LoiterAction.c",
            "behavior/GimbalState.h",
            "behavior/KeepOutZone.h",
            "behavior/WeatherReport.h",
            "behavior/PayloadAction.h",
            "behavior/SessionStatus.c",
            "behavior/SearchTask.h",
            "behavior/Location3D.c",
            "behavior/KeepOutZone.c",
            "behavior/VideoStreamState.c",
            "behavior/enums.h",
            "behavior/GimbalConfiguration.h",
            "behavior/GimbalConfiguration.c",
            "behavior/PayloadAction.c",
            "behavior/PayloadStowAction.c",
            "behavior/RemoveEntities.h",
            "behavior/KeyValuePair.h",
            "behavior/lmcp.c",
            "behavior/SearchTask.c",
            "behavior/GimbalScanAction.h",
            "behavior/Task.h",
            "behavior/AutomationResponse.h",
            "behavior/RemoveZones.c",
            "behavior/MustFlyTask.c",
            "behavior/Circle.h",
            "behavior/VehicleAction.c",
            "behavior/MissionCommand.c",
            "behavior/RemoveTasks.c",
            "behavior/OperatingRegion.h",
            "behavior/AbstractGeometry.c",
            "behavior/CameraAction.c",
            "behavior/CameraConfiguration.c",
            "behavior/LoiterTask.c",
            "behavior/WaypointManagerUtils.h",
            "behavior/AirVehicleState.c",
            "behavior/ServiceStatus.h",
            "behavior/GoToWaypointAction.c",
            "behavior/GimbalState.c",
            "behavior/GoToWaypointAction.h",
            "behavior/FollowPathCommand.c",
            "behavior/StopMovementAction.h",
            "behavior/CameraAction.h",
            "behavior/NavigationAction.c",
            "behavior/KeepInZone.c",
            "behavior/CameraConfiguration.h",
            "behavior/WeatherReport.c",
            "behavior/VehicleAction.h",
            "behavior/VideoStreamConfiguration.h",
            "behavior/PayloadStowAction.h",
			"behavior/PathWaypoint.h",
            "behavior/SessionStatus.h",
            "behavior/Rectangle.h",
            "behavior/GimballedPayloadState.h",
            "behavior/PointSearchTask.c",
            "behavior/EntityConfiguration.h",
            "behavior/VideoStreamAction.c",
            "behavior/LineSearchTask.h",
            "behavior/PayloadConfiguration.h",
            "behavior/AirVehicleState.h",
            "behavior/GimbalStareAction.c",
            "behavior/FlightDirectorAction.h",
            "behavior/WaypointTransfer.c",
            "behavior/conv.h",
            "behavior/Waypoint.c",
            "behavior/PayloadConfiguration.c",
            "behavior/AbstractGeometry.h",
            "behavior/AbstractZone.h",
            "behavior/FlightProfile.h",
            "behavior/VideoStreamState.h",
            "behavior/PointSearchTask.h",
            "behavior/PayloadState.c",
            "behavior/StopMovementAction.c",
            "behavior/LoiterAction.h",
            "behavior/FlightDirectorAction.c",
            "behavior/lmcp.h",
            "behavior/EntityState.h",
            "behavior/EntityState.c",
            "behavior/AreaSearchTask.h",
            "behavior/Circle.c",
            "behavior/Wedge.h",
            "behavior/MustFlyTask.h",
            "behavior/PathWaypoint.c",
            "behavior/RemoveEntities.c",
            "behavior/LoiterTask.h",
            "behavior/ServiceStatus.c",
            "behavior/GimbalScanAction.c",
            "behavior/AutomationResponse.c",
            "behavior/FlightProfile.c",
            "behavior/CameraState.c",
            "behavior/Wedge.c",
            "behavior/VideoStreamAction.h",
            "behavior/GimbalAngleAction.h",
            "behavior/KeyValuePair.c",
            "behavior/AirVehicleConfiguration.c",
            "behavior/VideoStreamConfiguration.c",
            "behavior/AutomationRequest.h",
            "behavior/AutomationRequest.c",
            "behavior/AreaSearchTask.c",
            "behavior/Task.c",
            "behavior/struct_defines.h",
            "behavior/Rectangle.c",
            "behavior/GimballedPayloadState.c",
            "behavior/FollowPathCommand.h",
            "behavior/Polygon.h",
            "behavior/MissionCommand.h",
            "behavior/GimbalAngleAction.c",
            "behavior/LineSearchTask.c",
            "behavior/VehicleActionCommand.h",
            "behavior/GimbalStareAction.h",
            "behavior/OperatingRegion.c",
            "behavior/RemoveZones.h",
            "behavior/EntityConfiguration.c",
            "behavior/PayloadState.h",
            "behavior/CameraState.h",
            "behavior/Waypoint.h",
            "behavior/conv.c",
            "behavior/Location3D.h",
            "behavior/KeepInZone.h",
            "behavior/RemoveTasks.h",
            "behavior/OperatorSignal.h",
            "behavior/AbstractZone.c",
            "behavior/VehicleActionCommand.c",
            "behavior/OperatorSignal.c"
			);	
    	Dispatch_Protocol => Sporadic;
    	Priority => 200;
    	Stack_Size => 1024 Bytes;
    	Compute_Execution_Time => 10 us .. 100 us;
    	Period => 1 ms;
    	TB_SYS::Sends_Events_To => "{{}}";  
    	Initialize_Entrypoint_Source_Text => "init";
end WaypointManager;
	
thread implementation WaypointManager.Impl
end WaypointManager.Impl;
		
thread UARTDriver
	features
		recv_uartpkt: in event data port UART_Packet.Impl {
			TB_SYS::Compute_Entrypoint_Source_Text => ("recv_uartpkt");
			Queue_Size => 23388;
		};
		tracking_id: out event data port Base_Types::Integer_64;
			
	properties
		Source_Text => ("behavior/uartdriver.c");
    	Dispatch_Protocol => Sporadic;
     	Priority => 200;
    	Stack_Size => 1024 Bytes;
    	Compute_Execution_Time => 10 us .. 100 us;
    	Period => 1 ms;
    	TB_SYS::Sends_Events_To => "{{}}";
    	Initialize_Entrypoint_Source_Text => "init";		
end UARTDriver;	
	
thread implementation UARTDriver.Impl		
end UARTDriver.Impl;
	

process MC_SW
end MC_SW;


process implementation MC_SW.Impl
	subcomponents
		RADIO: thread RadioDriver.Impl;
		FPLN: thread FlightPlanner.Impl;
		WPM: thread WaypointManager.Impl;
		UART: thread UARTDriver.Impl;
		-- mission : data Mission.Impl {
		--	TB_SYS::CAmkES_Owner_Thread => "FlightPlanner";
		-- };
	connections
		c1: port FPLN.mission_new -> WPM.mission_new;
		c2: port WPM.mission_rcv -> FPLN.mission_rcv;
		c3: port RADIO.recv_map_out -> FPLN.recv_map;
		c6: port WPM.send_uartpkt -> UART.recv_uartpkt;
		c7: port UART.tracking_id -> WPM.tracking_id;
		-- c8: port UART.position_status_out -> FPLN.position_status;
		-- d1: data access mission -> FPLN.mission;
		-- d2: data access mission -> WPM.mission;
end MC_SW.Impl;
	
	


	
end SW;